cont
exit
Koala::Facebook::OAuth.new(ENV['FACEBOOK_APP_ID'], ENV['FACEBOOK_APP_SECRET']).get_app_access_token
oala::Facebook::OAuth.new(ENV['FACEBO
app_access_token
exit
ENV['FACEBOOK_APP_SECRET']
ENV['FACEBOOK_APPSECRET']
ENV['FACEBOOK_APP_ID']
exit
EXIT
ENV['FACEBOOK_APP_ID']
exit
EXIT
bla.get_app_access_token 
bla = Koala::Facebook::OAuth.new("2054326764813668", "940ec232d15460da1c8d1cd7c79fb26f")
posts.last["created_time"] == posts2.last["created_time"]
posts.last["created_time] == posts2.last["created_time"]
posts2.size
posts.size
next
client2
client
next
exit
posts = client.get_connection(fb_channel_name, 'posts', {since: 1.months.ago.to_i, fields: ['message', 'id']})
fb_channel_name
posts.size
posts = client.get_connection(fb_channel_name, 'posts', {since: 1.months.ago.to_i, fields: ['message', 'id']})
client.get_connection(fb_channel_name, 'posts', {since: 1.months.ago.to_i, fields: ['message', 'id']})
client = Koala::Facebook::API.new('2054326764813668|940ec232d15460da1c8d1cd7c79fb26f')
cont
next
url
exit
url
exit
@oauth.url_for_oauth_code(:permissions => "manage_pages")
@oauth.url_for_oauth_code
@oauth.@oauth.url_for_oauth_code
@oauth
@oauth_token
exit
@oauth.url_for_oauth_code(:callback_url => "https://rusty-zivaricha.c9users.io")
@oauth.url_for_oauth_code
@oauth
cont
next
reached_existing_post
next
max_original_created_time
max_original_created_at
cont
reached_existing_post
next
max_original_created_time
exit
max_original_created_time.present?
max_original_created_time
exit
1.minute.ago
 posts.first["created_time"] <= Post.facebook_maximum
next
exit
cont
cotn
cont
posts.first["created_time"] >= Post
posts.first["created_time"]
posts.first["created_at"]
posts.first
next
cont
next
posts.size
next
cont
exit
client.get_object(post_id)
post_id = posts.first["id"].split("_").last
client.get_object(posts.first["id"])
client
e.message
next
exit
e.message
next
exit
@graph.get_object(posts.first["id"])
@graph.get_object(post["id"])
@graph = Koala::Facebook::API.new(oauth_token)
@graph = Koala::Facebook::API.new(access_token)
posts.first["id"].size
posts.first["id"].to_i
posts.first
posts
e
next
e
next
exit
next
posts.size
next
exit
connection.first.keys
connection.first["created_time"]
connection
connection.next_page
connection.size
connection
connection.next_page.size
connection.size
connection
next
cont
next
cont
next
fb_channel_name
next
cont
connection[0]
connection[2]["created_time"]
connection[2]["id"].to_i
connection[2]["id"].to_s
connection[2]["id"]
connection[2]
connection
connection.class
connection.first["id"]
id
connection
np
np = connection.next_page
2 = connection.next_page
id = connection.first["id"]
connection.size
next
exit
1.months.ago.to_i
connection.size
next
exit
DateTime.strptime(1.days.ago.to_i.to_s,'%s')
1.days.ago.to_i
1.days.ago
1.days.ago.class
1.days.ago
DateTime.strptime(DateTime.now.to_time.to_i.to_s,'%s')
DateTime.strptime("ateTime.now.to_time.to_i",'%s')
DateTime.now.to_time.to_i
DateTime.now.to_time
connection.first
connection2.first
connection2.first["id"]
connection2.first.keys
DateTime.parse(connection2.first["created_time"])
DateTime.parse(connection.first["created_time"])
connection.first["created_time"].date
connection.first["created_time"]
connection.first
connection
DateTime.strptime("1318996912",'%s')
DateTime.parse("1379593891")
DateTime.parse(1379593891)
DateTime.now
connection.class
next
exit
bla.first["id"]
bla.next_page
bla.first["id"]
bla.first
bla.first.keys
bla.first.id
a
bla.methods
bla.size
next
exit
bla.first.keys
bla.first
p bla
pp bla
bla
next
cont
client
next
exit
nex
cont
params[:fb].split("/").last
params[:fb].split("/")
params[:fb]
params
cont
exception
next
cont
exception
next
cont
params
cont
params
